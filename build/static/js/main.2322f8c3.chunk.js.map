{"version":3,"sources":["components/Blog.js","App.js","reportWebVitals.js","index.js"],"names":["Blog","props","title","content","App","state","error","isLoaded","items","fetch","then","res","json","result","setState","this","message","console","log","blogComponents","map","blog","id","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAUeA,MAVf,SAAcC,GACV,OACI,gCACI,wCAAWA,EAAMC,SACjB,0CAAaD,EAAME,WACnB,2BCiDGC,E,kDAlDb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,IALQ,E,qDASnB,WAAqB,IAAD,OAClBC,MAAM,mCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZP,UAAU,EACVC,MAAOK,OAMX,SAACP,GACC,EAAKQ,SAAS,CACZP,UAAU,EACVD,e,oBAMV,WAAU,IAAD,EAC4BS,KAAKV,MAAhCC,EADD,EACCA,MAAOC,EADR,EACQA,SAAUC,EADlB,EACkBA,MACzB,GAAIF,EACF,OAAO,0CAAaA,EAAMU,WACrB,GAAKT,EAEL,CAELU,QAAQC,IAAIV,GACZ,IAAMW,EAAkBX,EAAMY,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAoBnB,MAAOmB,EAAKnB,MAAOC,QAASkB,EAAKlB,SAA1CkB,EAAKC,OAE1D,OACE,6BACGH,IARL,OAAO,iD,GArCKI,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2322f8c3.chunk.js","sourcesContent":["function Blog(props) {\r\n    return (\r\n        <div>\r\n            <p>Title: {props.title}</p>\r\n            <p>Content: {props.content}</p>\r\n            <hr></hr>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\nimport Blog from \"./components/Blog\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:8000/api/blogs\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n\r\n      console.log(items);\r\n      const blogComponents =  items.map(blog => <Blog key={blog.id} title={blog.title} content={blog.content} />)\r\n\r\n      return (\r\n        <ul>\r\n          {blogComponents}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}